name: Build, Push & Scan Quarkus Image

# Trigger the workflow on pushes to `main` and pull requests
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Grant the job access to repo contents (read) and the ability
# to push images (write). The `id-token` permission is required
# if you later enable OIDC‑based log‑in to Quay or Sysdig.
permissions:
  contents: read
  packages: write
  id-token: write

# Re‑usable registry and image metadata
env:
  REGISTRY: quay.io
  REGISTRY_REPO: maratsal
  IMAGE_NAME: getting-started

jobs:
  build-push-scan:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the Quarkus quick‑start source
      - name: Checkout source
        uses: actions/checkout@v4

      # 2. Install the Source‑to‑Image (s2i) CLI
      - name: Install s2i CLI
        run: |
          S2I_VERSION="1.3.1"
          curl -L "https://github.com/openshift/source-to-image/releases/download/v${S2I_VERSION}/source-to-image-v${S2I_VERSION}-bc4551f9-linux-amd64.tar.gz" -o /tmp/s2i.tgz
          tar -xzf /tmp/s2i.tgz -C /tmp
          sudo mv /tmp/s2i*/s2i /usr/local/bin/
          s2i version

      # 3. Build the container image with s2i.
      #    The Quarkus “GraalVM CE” S2I builder assembles a native image
      #    from Maven/Gradle sources.
      - name: Build Quarkus image with s2i
        env:
          TAG: ${{ github.sha }}
        run: |
          s2i build \
            ./getting-started \
            quay.io/quarkus/ubi-quarkus-graalvmce-s2i:latest \
            $REGISTRY/$REGISTRY_REPO/$IMAGE_NAME:$TAG

      # 4. Log in to Quay so we can push
      - name: Log in to Quay.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      # 5. Push both the commit‑specific tag and the `latest` tag
      - name: Push image to Quay
        env:
          TAG: ${{ github.sha }}
        run: |
          docker push $REGISTRY/$REGISTRY_REPO/$IMAGE_NAME:$TAG
          docker tag $REGISTRY/$REGISTRY_REPO/$IMAGE_NAME:$TAG $REGISTRY/$REGISTRY_REPO/$IMAGE_NAME:latest
          docker push $REGISTRY/$REGISTRY_REPO/$IMAGE_NAME:latest

      # 6. Scan the freshly‑pushed image with Sysdig Secure
      - name: Sysdig Secure image scan
        uses: sysdiglabs/scan-action@v6
        with:
          sysdig_secure_token: ${{ secrets.SYSDIG_SECURE_TOKEN }}
          image: ${{ env.REGISTRY }}/${{ env.REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          # Optional: fail the workflow if critical vulns are found
          fail_on_critical: true

